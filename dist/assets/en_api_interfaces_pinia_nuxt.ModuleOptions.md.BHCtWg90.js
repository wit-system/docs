import{_ as e,c as t,o,a4 as a}from"./chunks/framework.BdtWl32M.js";const f=JSON.parse('{"title":"Interface: ModuleOptions","description":"","frontmatter":{"editLink":false},"headers":[],"relativePath":"en/api/interfaces/pinia_nuxt.ModuleOptions.md","filePath":"en/api/interfaces/pinia_nuxt.ModuleOptions.md"}'),s={name:"en/api/interfaces/pinia_nuxt.ModuleOptions.md"},i=a('<p><a href="./../">API Documentation</a> / <a href="./../modules/pinia_nuxt.html">@pinia/nuxt</a> / ModuleOptions</p><h1 id="Interface-ModuleOptions" tabindex="-1">Interface: ModuleOptions <a class="header-anchor" href="#Interface-ModuleOptions" aria-label="Permalink to &quot;Interface: ModuleOptions&quot;">​</a></h1><p><a href="./../modules/pinia_nuxt.html">@pinia/nuxt</a>.ModuleOptions</p><h2 id="Properties" tabindex="-1">Properties <a class="header-anchor" href="#Properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="disableVuex" tabindex="-1">disableVuex <a class="header-anchor" href="#disableVuex" aria-label="Permalink to &quot;disableVuex&quot;">​</a></h3><p>• <code>Optional</code> <strong>disableVuex</strong>: <code>boolean</code></p><p>Pinia disables Vuex by default, set this option to <code>false</code> to avoid it and use Pinia alongside Vuex (Nuxt 2 only)</p><p><strong><code>Default</code></strong></p><p><code>true</code></p><hr><h3 id="storesDirs" tabindex="-1">storesDirs <a class="header-anchor" href="#storesDirs" aria-label="Permalink to &quot;storesDirs&quot;">​</a></h3><p>• <code>Optional</code> <strong>storesDirs</strong>: <code>string</code>[]</p><p>Automatically add stores dirs to the auto imports. This is the same as directly adding the dirs to the <code>imports.dirs</code> option. If you want to also import nested stores, you can use the glob pattern <code>./stores/**</code></p><p><strong><code>Default</code></strong></p><p><code>[&#39;stores&#39;]</code></p>',15),n=[i];function r(d,p,c,l,u,h){return o(),t("div",null,n)}const m=e(s,[["render",r]]);export{f as __pageData,m as default};
