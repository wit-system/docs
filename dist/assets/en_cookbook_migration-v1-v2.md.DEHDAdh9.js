import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.BdtWl32M.js";const F=JSON.parse('{"title":"Migrating from 0.x (v1) to v2","description":"","frontmatter":{},"headers":[],"relativePath":"en/cookbook/migration-v1-v2.md","filePath":"en/cookbook/migration-v1-v2.md"}'),t={name:"en/cookbook/migration-v1-v2.md"},e=n(`<h1 id="Migrating-from-0-x-v1-to-v2" tabindex="-1">Migrating from 0.x (v1) to v2 <a class="header-anchor" href="#Migrating-from-0-x-v1-to-v2" aria-label="Permalink to &quot;Migrating from 0.x (v1) to v2&quot;">​</a></h1><p>Starting at version <code>2.0.0-rc.4</code>, pinia supports both Vue 2 and Vue 3! This means, all new updates will be applied to this version 2 so both Vue 2 and Vue 3 users can benefit from it. If you are using Vue 3, this doesn&#39;t change anything for you as you were already using the rc and you can check <a href="https://github.com/vuejs/pinia/blob/v2/packages/pinia/CHANGELOG.md" target="_blank" rel="noreferrer">the CHANGELOG</a> for a detailed explanation of everything that changed. Otherwise, <strong>this guide is for you</strong>!</p><h2 id="Deprecations" tabindex="-1">Deprecations <a class="header-anchor" href="#Deprecations" aria-label="Permalink to &quot;Deprecations&quot;">​</a></h2><p>Let&#39;s take a look at all the changes you need to apply to your code. First, make sure you are already running the latest 0.x version to see any deprecations:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code"><code><span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#59873A;">npm</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;"> i</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;">pinia@^0.x.x</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">&#39;</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#A0ADA0;"># or with yarn</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#59873A;">yarn</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;"> add</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;">pinia@^0.x.x</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">&#39;</span></span></code></pre></div><p>If you are using ESLint, consider using <a href="https://github.com/gund/eslint-plugin-deprecation" target="_blank" rel="noreferrer">this plugin</a> to find all deprecated usages. Otherwise, you should be able to see them as they appear crossed. These are the APIs that were deprecated that were removed:</p><ul><li><code>createStore()</code> becomes <code>defineStore()</code></li><li>In subscriptions, <code>storeName</code> becomes <code>storeId</code></li><li><code>PiniaPlugin</code> was renamed <code>PiniaVuePlugin</code> (Pinia plugin for Vue 2)</li><li><code>$subscribe()</code> no longer accepts a <em>boolean</em> as second parameter, pass an object with <code>detached: true</code> instead.</li><li>Pinia plugins no longer directly receive the <code>id</code> of the store. Use <code>store.$id</code> instead.</li></ul><h2 id="Breaking-changes" tabindex="-1">Breaking changes <a class="header-anchor" href="#Breaking-changes" aria-label="Permalink to &quot;Breaking changes&quot;">​</a></h2><p>After removing these, you can upgrade to v2 with:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code"><code><span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#59873A;">npm</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;"> i</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;">pinia@^2.x.x</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">&#39;</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#A0ADA0;"># or with yarn</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#59873A;">yarn</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;"> add</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;">pinia@^2.x.x</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">&#39;</span></span></code></pre></div><p>And start updating your code.</p><h3 id="Generic-Store-type" tabindex="-1">Generic Store type <a class="header-anchor" href="#Generic-Store-type" aria-label="Permalink to &quot;Generic Store type&quot;">​</a></h3><p>Added in <a href="https://github.com/vuejs/pinia/blob/v2/packages/pinia/CHANGELOG.md#200-rc0-2021-07-28" target="_blank" rel="noreferrer">2.0.0-rc.0</a></p><p>Replace any usage of the type <code>GenericStore</code> with <code>StoreGeneric</code>. This is the new generic store type that should accept any kind of store. If you were writing functions using the type <code>Store</code> without passing its generics (e.g. <code>Store&lt;Id, State, Getters, Actions&gt;</code>), you should also use <code>StoreGeneric</code> as the <code>Store</code> type without generics creates an empty store type.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light has-diff vp-code"><code><span class="line diff remove"><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;">function</span><span style="--shiki-dark:#62E884;--shiki-light:#59873A;"> takeAnyStore</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#B07D48;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">store</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#2E8F82;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> Store</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {}</span></span>
<span class="line diff add"><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;">function</span><span style="--shiki-dark:#62E884;--shiki-light:#59873A;"> takeAnyStore</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#B07D48;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">store</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#2E8F82;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> StoreGeneric</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {}</span></span>
<span class="line"></span>
<span class="line diff remove"><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;">function</span><span style="--shiki-dark:#62E884;--shiki-light:#59873A;"> takeAnyStore</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#B07D48;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">store</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#2E8F82;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> GenericStore</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {}</span></span>
<span class="line diff add"><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;">function</span><span style="--shiki-dark:#62E884;--shiki-light:#59873A;"> takeAnyStore</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">(</span><span style="--shiki-dark:#FFB86C;--shiki-light:#B07D48;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">store</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#2E8F82;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> StoreGeneric</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">)</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {}</span></span></code></pre></div><h2 id="DefineStoreOptions-for-plugins" tabindex="-1"><code>DefineStoreOptions</code> for plugins <a class="header-anchor" href="#DefineStoreOptions-for-plugins" aria-label="Permalink to &quot;\`DefineStoreOptions\` for plugins&quot;">​</a></h2><p>If you were writing plugins, using TypeScript, and extending the type <code>DefineStoreOptions</code> to add custom options, you should rename it to <code>DefineStoreOptionsBase</code>. This type will apply to both setup and options stores.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light has-diff vp-code"><code><span class="line"><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;">declare</span><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;"> module</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;">pinia</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">&#39;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {</span></span>
<span class="line diff remove"><span style="--shiki-dark:#F286C4;--shiki-light:#1E754F;">  export</span><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;"> interface</span><span style="--shiki-dark:#97E1F1;--shiki-light:#2E8F82;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> DefineStoreOptions</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">&lt;</span><span style="--shiki-dark:#FFB86C;--shiki-light:#2E8F82;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">S</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span><span style="--shiki-dark:#FFB86C;--shiki-light:#2E8F82;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> Store</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {</span></span>
<span class="line diff add"><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;">  export</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> interface</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> DefineStoreOptionsBase</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">&lt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;">S</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> Store</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> { </span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">    debounce?</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">      [</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;">k</span><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;"> in</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> keyof</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> StoreActions</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">&lt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;">Store</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">]</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#998418;">?</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> number</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">    }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">}</span></span></code></pre></div><h2 id="PiniaStorePlugin-was-renamed" tabindex="-1"><code>PiniaStorePlugin</code> was renamed <a class="header-anchor" href="#PiniaStorePlugin-was-renamed" aria-label="Permalink to &quot;\`PiniaStorePlugin\` was renamed&quot;">​</a></h2><p>The type <code>PiniaStorePlugin</code> was renamed to <code>PiniaPlugin</code>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes dracula-soft vitesse-light has-diff vp-code"><code><span class="line diff remove"><span style="--shiki-dark:#F286C4;--shiki-light:#1E754F;">import</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> PiniaStorePlugin</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> }</span><span style="--shiki-dark:#F286C4;--shiki-light:#1E754F;"> from</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;">pinia</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">&#39;</span></span>
<span class="line diff add"><span style="--shiki-dark:#F286C4;--shiki-light:#1E754F;">import</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#B07D48;"> PiniaPlugin</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> }</span><span style="--shiki-dark:#F286C4;--shiki-light:#1E754F;"> from</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;">pinia</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line diff remove"><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;">const</span><span style="--shiki-dark:#62E884;--shiki-light:#59873A;"> piniaPlugin</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#2E8F82;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> PiniaStorePlugin</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> ()</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;"> =&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {</span></span>
<span class="line diff add"><span style="--shiki-dark:#F286C4;--shiki-light:#AB5959;">const</span><span style="--shiki-dark:#62E884;--shiki-light:#59873A;"> piniaPlugin</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#97E1F1;--shiki-light:#2E8F82;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;"> PiniaPlugin</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> ()</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;"> =&gt;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#A0ADA0;">  // ...</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">}</span></span></code></pre></div><p><strong>Note this change can only be done after upgrading to the latest version of Pinia without deprecations</strong>.</p><h2 id="-vue-composition-api-version" tabindex="-1"><code>@vue/composition-api</code> version <a class="header-anchor" href="#-vue-composition-api-version" aria-label="Permalink to &quot;\`@vue/composition-api\` version&quot;">​</a></h2><p>Since pinia now relies on <code>effectScope()</code>, you must use at least the version <code>1.1.0</code> of <code>@vue/composition-api</code>:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code"><code><span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#59873A;">npm</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;"> i</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;"> @vue/composition-api@latest</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#A0ADA0;"># or with yarn</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#59873A;">yarn</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;"> add</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;"> @vue/composition-api@latest</span></span></code></pre></div><h2 id="webpack-4-support" tabindex="-1">webpack 4 support <a class="header-anchor" href="#webpack-4-support" aria-label="Permalink to &quot;webpack 4 support&quot;">​</a></h2><p>If you are using webpack 4 (Vue CLI uses webpack 4), you might encounter an error like this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code"><code><span class="line"><span>ERROR  Failed to compile with 18 errors</span></span>
<span class="line"><span></span></span>
<span class="line"><span> error  in ./node_modules/pinia/dist/pinia.mjs</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Can&#39;t import the named export &#39;computed&#39; from non EcmaScript module (only default export is available)</span></span></code></pre></div><p>This is due to the modernization of dist files to support native ESM modules in Node.js. Files are now using the extension <code>.mjs</code> and <code>.cjs</code> to let Node benefit from this. To fix this issue you have two possibilities:</p><ul><li><p>If you are using Vue CLI 4.x, upgrade your dependencies. This should include the fix below.</p><ul><li><p>If upgrading is not possible for you, add this to your <code>vue.config.js</code>:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code"><code><span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#A0ADA0;">// vue.config.js</span></span>
<span class="line"><span style="--shiki-dark:#97E1F1;--shiki-light:#998418;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">module</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">.</span><span style="--shiki-dark:#97E1F1;--shiki-light:#998418;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">exports</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#998418;">  configureWebpack</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#998418;">    module</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#998418;">      rules</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> [</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">        {</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#998418;">          test</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#EE6666;--shiki-light:#B5695999;"> /</span><span style="--shiki-dark:#E7EE98;--shiki-light:#BDA437;">\\.</span><span style="--shiki-dark:#E7EE98;--shiki-light:#AB5E3F;">mjs</span><span style="--shiki-dark:#F286C4;--shiki-light:#1E754F;">$</span><span style="--shiki-dark:#EE6666;--shiki-light:#B5695999;">/</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#998418;">          include</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#EE6666;--shiki-light:#B5695999;"> /</span><span style="--shiki-dark:#E7EE98;--shiki-light:#AB5E3F;">node_modules</span><span style="--shiki-dark:#EE6666;--shiki-light:#B5695999;">/</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#998418;">          type</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;">javascript/auto</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">&#39;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">        },</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">      ],</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">    },</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">  },</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">}</span></span></code></pre></div></li></ul></li><li><p>If you are manually handling webpack, you will have to let it know how to handle <code>.mjs</code> files:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code"><code><span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#A0ADA0;">// webpack.config.js</span></span>
<span class="line"><span style="--shiki-dark:#97E1F1;--shiki-light:#998418;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">module</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">.</span><span style="--shiki-dark:#97E1F1;--shiki-light:#998418;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">exports</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;"> =</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#998418;">  module</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#998418;">    rules</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> [</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">      {</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#998418;">        test</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#EE6666;--shiki-light:#B5695999;"> /</span><span style="--shiki-dark:#E7EE98;--shiki-light:#BDA437;">\\.</span><span style="--shiki-dark:#E7EE98;--shiki-light:#AB5E3F;">mjs</span><span style="--shiki-dark:#F286C4;--shiki-light:#1E754F;">$</span><span style="--shiki-dark:#EE6666;--shiki-light:#B5695999;">/</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#998418;">        include</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#EE6666;--shiki-light:#B5695999;"> /</span><span style="--shiki-dark:#E7EE98;--shiki-light:#AB5E3F;">node_modules</span><span style="--shiki-dark:#EE6666;--shiki-light:#B5695999;">/</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#998418;">        type</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;"> &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;">javascript/auto</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">&#39;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">      },</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">    ],</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">  },</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">}</span></span></code></pre></div></li></ul><h2 id="Devtools" tabindex="-1">Devtools <a class="header-anchor" href="#Devtools" aria-label="Permalink to &quot;Devtools&quot;">​</a></h2><p>Pinia v2 no longer hijacks Vue Devtools v5, it requires Vue Devtools v6. Find the download link on the <a href="https://devtools.vuejs.org/guide/installation.html#chrome" target="_blank" rel="noreferrer">Vue Devtools documentation</a> for the <strong>beta channel</strong> of the extension.</p><h2 id="Nuxt" tabindex="-1">Nuxt <a class="header-anchor" href="#Nuxt" aria-label="Permalink to &quot;Nuxt&quot;">​</a></h2><p>If you are using Nuxt, pinia has now its own dedicated Nuxt package 🎉. Install it with:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes dracula-soft vitesse-light vp-code"><code><span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#59873A;">npm</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;"> i</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;"> @pinia/nuxt</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#A0ADA0;"># or with yarn</span></span>
<span class="line"><span style="--shiki-dark:#62E884;--shiki-light:#59873A;">yarn</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;"> add</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;"> @pinia/nuxt</span></span></code></pre></div><p>Also make sure to <strong>update your <code>@nuxtjs/composition-api</code> package</strong>.</p><p>Then adapt your <code>nuxt.config.js</code> and your <code>tsconfig.json</code> if you are using TypeScript:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes dracula-soft vitesse-light has-diff vp-code"><code><span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#A0ADA0;">// nuxt.config.js</span></span>
<span class="line"><span style="--shiki-dark:#97E1F1;--shiki-light:#998418;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">module</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">.</span><span style="--shiki-dark:#97E1F1;--shiki-light:#998418;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">exports</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#59873A;">  buildModules</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> [</span></span>
<span class="line"><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">    &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;">@nuxtjs/composition-api/module</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">&#39;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span></span>
<span class="line diff remove"><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">    &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;">pinia/nuxt</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">&#39;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span></span>
<span class="line diff add"><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">    &#39;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;">@pinia/nuxt</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">&#39;</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">,</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">  ],</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">}</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes dracula-soft vitesse-light has-diff vp-code"><code><span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#A0ADA0;">// tsconfig.json</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">{</span></span>
<span class="line"><span style="--shiki-dark:#97E2F2;--shiki-light:#B5695999;">  &quot;</span><span style="--shiki-dark:#97E1F1;--shiki-light:#998418;">types</span><span style="--shiki-dark:#97E2F2;--shiki-light:#B5695999;">&quot;</span><span style="--shiki-dark:#F286C4;--shiki-light:#999999;">:</span><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;"> [</span></span>
<span class="line"><span style="--shiki-dark:#7B7F8B;--shiki-light:#A0ADA0;">    // ...</span></span>
<span class="line diff remove"><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">    &quot;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;">pinia/nuxt/types</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">&quot;</span></span>
<span class="line diff add"><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">    &quot;</span><span style="--shiki-dark:#E7EE98;--shiki-light:#B56959;">@pinia/nuxt</span><span style="--shiki-dark:#DEE492;--shiki-light:#B5695999;">&quot;</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">  ]</span></span>
<span class="line"><span style="--shiki-dark:#F6F6F4;--shiki-light:#999999;">}</span></span></code></pre></div><p>It is also recommended to give <a href="./../ssr/nuxt.html">the dedicated Nuxt section</a> a read.</p>`,40),h=[e];function l(p,k,r,o,d,g){return a(),i("div",null,h)}const y=s(t,[["render",l]]);export{F as __pageData,y as default};
